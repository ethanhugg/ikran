/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Video for Jetpack.
 *
 * The Initial Developer of the Original Code is Mozilla Labs.
 * Portions created by the Initial Developer are Copyright (C) 2009-10
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Ethan Hugg       <ehugg@cisco.com>
 *   Enda Mannion     <emannion@cisco.com>
 *   Suhas Nandakumar <snandaku@cisco.com>
 *   Anant Narayanan  <anant@kix.in>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsILocalFile.idl"
#include "nsIOutputStream.idl"
#include "nsIBaseWindow.idl"

%{C++
#include "nsStringGlue.h"
#include "nsCOMPtr.h"
#include "nsStringBuffer.h"
%}


[scriptable, function, uuid(9d66a225-0134-4c6f-a6e2-466c998bedd4)]
interface nsISessionStateObserver : nsISupports
{
    void onSessionStateChange(in string state, in string args);
};

[scriptable, function, uuid(9d66a225-0134-4c6f-a6e2-477c7778ffb8)]
interface nsIMediaStateObserver : nsISupports
{
    void onMediaStateChange(in string state, in string args);
};


[scriptable, uuid(c467b1f4-551c-4e2f-a6ba-cb7d792d5244)]
interface ICallControl : nsISupports
{
	void registerUser(in string user_device,
						in string user,
						in string proxy_address,
						in nsISessionStateObserver sess_obs);
	void unregisterUser();
	void placeCall(in string dn,
					in nsIMediaStateObserver media_obs);
	void hangupCall();
	void answerCall(in nsIMediaStateObserver media_obs);
};
